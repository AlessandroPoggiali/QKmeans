###### TEST 0 on iris dataset
## QKMEANS
# Parameters: K = 2, M = 150, N = 4, M1 = 2, shots = 4000
# Iterations needed: 10/10
# Average iteration time: 30.49s 
# Average accuracy w.r.t classical assignment: 95.27% 
# SSE: 67.14889243627934
# Silhouette: 0.5540222680492383
# Quantum kmeans assignment 
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
## Classical KMEANS
# Iterations needed: 7/10
# Average iteration time: 0.0002949578421456473s 
# SSE: 58.24593685691776
# Silhouette: 0.5618965760255964
# Classical Kmeans assignment
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
## Comparing quantum with classical kmeans algorithm
[[ 9984   384]
 [  208 11774]]

###### TEST 1 on iris dataset
## QKMEANS
# Parameters: K = 2, M = 150, N = 4, M1 = 4, shots = 6000
# Iterations needed: 10/10
# Average iteration time: 28.76s 
# Average accuracy w.r.t classical assignment: 92.27% 
# SSE: 68.09396393218525
# Silhouette: 0.5501431268986157
# Quantum kmeans assignment 
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
## Classical KMEANS
# Iterations needed: 8/10
# Average iteration time: 0.00034099817276000977s 
# SSE: 58.2429693033213
# Silhouette: 0.5671445606795363
# Classical Kmeans assignment
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
## Comparing quantum with classical kmeans algorithm
[[ 9600   768]
 [  400 11582]]


###### TEST 1 on iris dataset
## QKMEANS
# Parameters: K = 2, M = 150, N = 4, M1 = 8, shots = 10000
# Iterations needed: 10/10
# Average iteration time: 34.2s 
# Average accuracy w.r.t classical assignment: 93.67% 
# SSE: 67.00860975108169
# Silhouette: 0.5618965760255964
# Quantum kmeans assignment 
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
## Classical KMEANS
# Iterations needed: 7/10
# Average iteration time: 0.00036270277840750556s 
# SSE: 58.24593685691776
# Silhouette: 0.5618965760255964
# Classical Kmeans assignment
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
## Comparing quantum with classical kmeans algorithm
[[10192     0]
 [    0 12158]]

###### TEST 2 on iris dataset
## QKMEANS
# Parameters: K = 2, M = 150, N = 4, M1 = 16, shots = 18000
# Iterations needed: 10/10
# Average iteration time: 40.13s 
# Average accuracy w.r.t classical assignment: 92.13% 
# SSE: 67.00860975108169
# Silhouette: 0.5618965760255964
# Quantum kmeans assignment 
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
## Classical KMEANS
# Iterations needed: 8/10
# Average iteration time: 0.0003357529640197754s 
# SSE: 58.2429693033213
# Silhouette: 0.5671445606795363
# Classical Kmeans assignment
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
## Comparing quantum with classical kmeans algorithm
[[ 9800   392]
 [  200 11958]]


###### TEST 2 on iris dataset
## QKMEANS
# Parameters: K = 2, M = 150, N = 4, M1 = 32, shots = 34000
# Iterations needed: 10/10
# Average iteration time: 54.47s 
# Average accuracy w.r.t classical assignment: 94.13% 
# SSE: 67.56569402973768
# Silhouette: 0.5556725995423872
# Quantum kmeans assignment 
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
## Classical KMEANS
# Iterations needed: 7/10
# Average iteration time: 0.00034298215593610493s 
# SSE: 58.24593685691776
# Silhouette: 0.5618965760255964
# Classical Kmeans assignment
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
## Comparing quantum with classical kmeans algorithm
[[ 9796   486]
 [  396 11672]]

###### TEST 3 on iris dataset
## QKMEANS
# Parameters: K = 2, M = 150, N = 4, M1 = 64, shots = 66000
# Iterations needed: 10/10
# Average iteration time: 58.6s 
# Average accuracy w.r.t classical assignment: 89.0% 
# SSE: 70.73976868613074
# Silhouette: 0.5242967062604987
# Quantum kmeans assignment 
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
## Classical KMEANS
# Iterations needed: 8/10
# Average iteration time: 0.0003269016742706299s 
# SSE: 58.2429693033213
# Silhouette: 0.5671445606795363
# Classical Kmeans assignment
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
## Comparing quantum with classical kmeans algorithm
[[ 8900  1958]
 [ 1100 10392]]


###### TEST 3 on iris dataset
## QKMEANS
# Parameters: K = 2, M = 150, N = 4, M1 = 128, shots = 130000
# Iterations needed: 10/10
# Average iteration time: 78.73s 
# Average accuracy w.r.t classical assignment: 92.0% 
# SSE: 67.60179579599851
# Silhouette: 0.5551676158564
# Quantum kmeans assignment 
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
## Classical KMEANS
# Iterations needed: 7/10
# Average iteration time: 0.0003116130828857422s 
# SSE: 58.24593685691776
# Silhouette: 0.5618965760255964
# Classical Kmeans assignment
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
## Comparing quantum with classical kmeans algorithm
[[10088   194]
 [  104 11964]]


###### TEST 4 on iris dataset
## QKMEANS
# Parameters: K = 3, M = 150, N = 4, M1 = 2, shots = 5000
# Iterations needed: 10/10
# Average iteration time: 49.07s 
# Average accuracy w.r.t classical assignment: 79.93% 
# SSE: 39.15596743972459
# Silhouette: 0.4779960636679393
# Quantum kmeans assignment 
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 0, 2, 0, 2, 0, 2, 0, 0, 2, 0, 2, 0, 2, 2, 0, 0, 0, 2, 0, 0, 0, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 2, 0, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 0, 2, 0, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 0, 0, 2, 2]
## Classical KMEANS
# Iterations needed: 7/10
# Average iteration time: 0.00038542066301618306s 
# SSE: 29.63695991971585
# Silhouette: 0.5547128381523675
# Classical Kmeans assignment
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 2, 0, 2, 0, 2, 0, 2, 2, 0, 2, 0, 2, 0, 2, 2, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 0, 2, 2, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0]
## Comparing quantum with classical kmeans algorithm
[[13594  1244]
 [ 1164  6348]]


###### TEST 5 on iris dataset
## QKMEANS
# Parameters: K = 3, M = 150, N = 4, M1 = 4, shots = 7000
# Iterations needed: 10/10
# Average iteration time: 39.59s 
# Average accuracy w.r.t classical assignment: 77.8% 
# SSE: 42.15725776234469
# Silhouette: 0.43982259077943314
# Quantum kmeans assignment 
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 2, 2, 2, 0, 2, 0, 2, 2, 2, 2, 0, 2, 0, 0, 2, 2, 2, 0, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 0, 2, 2, 0, 2, 2, 2, 0, 0, 2, 2, 2, 0, 0, 2, 0, 2, 2, 0, 0, 0, 0, 2, 0, 2, 0, 2, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 2, 0, 0, 0]
## Classical KMEANS
# Iterations needed: 7/10
# Average iteration time: 0.00038542066301618306s 
# SSE: 29.63695991971585
# Silhouette: 0.5547128381523675
# Classical Kmeans assignment
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 2, 0, 2, 0, 2, 0, 2, 2, 0, 2, 0, 2, 0, 2, 2, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 0, 2, 2, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0]
## Comparing quantum with classical kmeans algorithm
[[13464  1528]
 [ 1294  6064]]


###### TEST 6 on iris dataset
## QKMEANS
# Parameters: K = 3, M = 150, N = 4, M1 = 8, shots = 11000
# Iterations needed: 10/10
# Average iteration time: 39.7s 
# Average accuracy w.r.t classical assignment: 77.0% 
# SSE: 57.51697632943999
# Silhouette: 0.32448494426985514
# Quantum kmeans assignment 
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 2, 2, 2, 0, 2, 2, 1, 2, 0, 2, 2, 2, 0, 2, 2, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 0, 0, 2, 2, 2, 0, 2, 2, 2, 2, 0, 2, 2, 2, 0, 0, 2, 0, 0, 0, 2, 2, 0, 2, 2, 0, 0, 0, 2, 2, 0, 0, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 0, 0, 2, 2, 0, 2, 2, 0, 2, 0, 0, 0, 2, 2, 2, 0, 0, 2]
## Classical KMEANS
# Iterations needed: 7/10
# Average iteration time: 0.0005138601575578962s 
# SSE: 29.63695991971585
# Silhouette: 0.5547128381523675
# Classical Kmeans assignment
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 2, 0, 2, 0, 2, 0, 2, 2, 0, 2, 0, 2, 0, 2, 2, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 0, 2, 2, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0]
## Comparing quantum with classical kmeans algorithm
[[12594  2356]
 [ 2164  5236]]


###### TEST 7 on iris dataset
## QKMEANS
# Parameters: K = 3, M = 150, N = 4, M1 = 16, shots = 19000
# Iterations needed: 10/10
# Average iteration time: 46.8s 
# Average accuracy w.r.t classical assignment: 80.8% 
# SSE: 44.848045235731604
# Silhouette: 0.4340739837484059
# Quantum kmeans assignment 
[1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 2, 0, 2, 0, 2, 0, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 0, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 2, 2, 0, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 0, 2, 0, 0, 2, 0, 0, 0, 0, 2, 0, 2, 0, 2, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 2, 0, 2, 2, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 2]
## Classical KMEANS
# Iterations needed: 7/10
# Average iteration time: 0.0003841945103236607s 
# SSE: 29.63695991971585
# Silhouette: 0.5547128381523675
# Classical Kmeans assignment
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 2, 0, 2, 0, 2, 0, 2, 2, 0, 2, 0, 2, 0, 2, 2, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 0, 2, 2, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0]
## Comparing quantum with classical kmeans algorithm
[[13572  1422]
 [ 1186  6170]]


###### TEST 8 on iris dataset
## QKMEANS
# Parameters: K = 3, M = 150, N = 4, M1 = 32, shots = 35000
# Iterations needed: 10/10
# Average iteration time: 57.02s 
# Average accuracy w.r.t classical assignment: 79.4% 
# SSE: 48.37467498354543
# Silhouette: 0.38789277639052555
# Quantum kmeans assignment 
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 0, 0, 0, 2, 0, 0, 0, 1, 2, 0, 0, 0, 2, 0, 0, 0, 0, 2, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 2, 2, 2, 2, 0, 2, 2, 0, 2, 2, 2, 2, 0, 2, 0, 2, 0, 2, 2, 0, 2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 0, 2, 0, 2, 2, 0, 2, 2, 2, 2, 0, 2, 0]
## Classical KMEANS
# Iterations needed: 7/10
# Average iteration time: 0.0003921304430280413s 
# SSE: 29.63695991971585
# Silhouette: 0.5547128381523675
# Classical Kmeans assignment
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 2, 0, 2, 0, 2, 0, 2, 2, 0, 2, 0, 2, 0, 2, 2, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 0, 2, 2, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0]
## Comparing quantum with classical kmeans algorithm
[[13040  1954]
 [ 1718  5638]]


###### TEST 9 on iris dataset
## QKMEANS
# Parameters: K = 3, M = 150, N = 4, M1 = 64, shots = 67000
# Iterations needed: 10/10
# Average iteration time: 67.72s 
# Average accuracy w.r.t classical assignment: 77.73% 
# SSE: 49.1614186535174
# Silhouette: 0.3898347876532059
# Quantum kmeans assignment 
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 0, 2, 2, 2, 1, 2, 0, 0, 2, 0, 2, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 2, 0, 2, 2, 0, 2, 0, 0, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 2, 0, 2, 2, 2, 2, 2, 0, 0, 2, 0, 2, 2, 0, 0, 2, 0, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 0, 2, 2, 2, 2, 0, 2, 0, 2, 2, 2, 2, 2, 2, 2]
## Classical KMEANS
# Iterations needed: 7/10
# Average iteration time: 0.0004895074026925224s 
# SSE: 29.63695991971585
# Silhouette: 0.5547128381523675
# Classical Kmeans assignment
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 2, 0, 2, 0, 2, 0, 2, 2, 0, 2, 0, 2, 0, 2, 2, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 0, 2, 2, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0]
## Comparing quantum with classical kmeans algorithm
[[13302  1636]
 [ 1456  5956]]


###### TEST 10 on iris dataset
## QKMEANS
# Parameters: K = 3, M = 150, N = 4, M1 = 128, shots = 131000
# Iterations needed: 10/10
# Average iteration time: 83.85s 
# Average accuracy w.r.t classical assignment: 78.67% 
# SSE: 47.29949453281742
# Silhouette: 0.4043150492299326
# Quantum kmeans assignment 
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 2, 2, 2, 0, 2, 1, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 2, 2, 0, 2, 2, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 0, 2, 2, 2, 0, 2, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 0, 2, 0, 2, 0, 2, 0, 0, 0, 0, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 0, 2, 2, 0]
## Classical KMEANS
# Iterations needed: 7/10
# Average iteration time: 0.00031144278390066963s 
# SSE: 29.63695991971585
# Silhouette: 0.5547128381523675
# Classical Kmeans assignment
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 2, 0, 2, 0, 2, 0, 2, 2, 0, 2, 0, 2, 0, 2, 2, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 0, 2, 2, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0]
## Comparing quantum with classical kmeans algorithm
[[13210  1788]
 [ 1548  5804]]


###### TEST 11 on iris dataset
## QKMEANS
# Parameters: K = 4, M = 150, N = 4, M1 = 2, shots = 6000
# Iterations needed: 10/10
# Average iteration time: 58.88s 
# Average accuracy w.r.t classical assignment: 75.2% 
# SSE: 36.19172663916261
# Silhouette: 0.3111560826983808
# Quantum kmeans assignment 
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 3, 3, 3, 3, 2, 0, 2, 1, 1, 1, 0, 3, 0, 1, 1, 0, 1, 2, 1, 0, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 2, 0, 1, 1, 1, 1, 1, 1, 0, 0, 2, 1, 1, 1, 0, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 0, 0, 0, 2, 1, 2, 2, 0, 2, 1, 0, 1, 2, 2, 0, 2, 0, 1, 0, 0, 0, 1, 2, 2, 2, 2, 2, 0, 0, 2, 0, 1, 1, 2, 2, 2, 2, 0, 0, 0, 1, 0, 0, 0, 2, 2, 0, 2]
## Classical KMEANS
# Iterations needed: 5/10
# Average iteration time: 0.0005441188812255859s 
# SSE: 25.896986331004793
# Silhouette: 0.4462966164475495
# Classical Kmeans assignment
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 1, 0, 1, 2, 1, 0, 1, 1, 2, 1, 0, 1, 0, 2, 1, 1, 1, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 2, 2, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 2, 2, 0, 2, 2, 0, 1, 0, 0, 2, 2, 2, 0, 1, 2, 2, 0, 0, 0, 1, 2, 2, 0, 2, 2, 0, 2, 2, 2, 0, 0, 0, 2, 0, 1, 0, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2]
## Comparing quantum with classical kmeans algorithm
[[15036  1570]
 [ 1612  4132]]


###### TEST 12 on iris dataset
## QKMEANS
# Parameters: K = 4, M = 150, N = 4, M1 = 4, shots = 8000
# Iterations needed: 10/10
# Average iteration time: 44.52s 
# Average accuracy w.r.t classical assignment: 75.47% 
# SSE: 38.21448164416224
# Silhouette: 0.3001955609910452
# Quantum kmeans assignment 
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 3, 3, 3, 3, 2, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 2, 1, 1, 1, 1, 0, 1, 1, 1, 2, 0, 2, 2, 0, 1, 1, 1, 1, 1, 1, 0, 2, 1, 1, 1, 2, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 0, 2, 1, 1, 0, 0, 2, 2, 1, 2, 0, 0, 2, 0, 2, 1, 2, 0, 2, 0, 0, 0, 1, 0, 0, 2, 0, 2, 0, 0, 2, 1, 2, 0, 0, 1, 2, 2, 1]
## Classical KMEANS
# Iterations needed: 5/10
# Average iteration time: 0.00041451454162597654s 
# SSE: 25.896986331004793
# Silhouette: 0.4462966164475495
# Classical Kmeans assignment
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 1, 0, 1, 2, 1, 0, 1, 1, 2, 1, 0, 1, 0, 2, 1, 1, 1, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 2, 2, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 2, 2, 0, 2, 2, 0, 1, 0, 0, 2, 2, 2, 0, 1, 2, 2, 0, 0, 0, 1, 2, 2, 0, 2, 2, 0, 2, 2, 2, 0, 0, 0, 2, 0, 1, 0, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2]
## Comparing quantum with classical kmeans algorithm
[[14990  1576]
 [ 1658  4126]]


###### TEST 13 on iris dataset
## QKMEANS
# Parameters: K = 4, M = 150, N = 4, M1 = 8, shots = 12000
# Iterations needed: 10/10
# Average iteration time: 42.69s 
# Average accuracy w.r.t classical assignment: 71.73% 
# SSE: 40.09488582352922
# Silhouette: 0.2890835242875403
# Quantum kmeans assignment 
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 0, 1, 1, 1, 2, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 2, 2, 1, 0, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 0, 2, 1, 0, 2, 1, 2, 0, 0, 0, 2, 1, 1, 0, 2, 1, 2, 0, 1, 2, 1, 0, 2, 0, 2, 1, 0, 2, 0, 2, 0, 0, 1, 0, 0, 0, 0, 1, 0, 2, 0, 1, 0, 2, 0, 0, 2, 2, 2]
## Classical KMEANS
# Iterations needed: 5/10
# Average iteration time: 0.00038065910339355467s 
# SSE: 25.896986331004793
# Silhouette: 0.4462966164475495
# Classical Kmeans assignment
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 1, 0, 1, 2, 1, 0, 1, 1, 2, 1, 0, 1, 0, 2, 1, 1, 1, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 2, 2, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 2, 2, 0, 2, 2, 0, 1, 0, 0, 2, 2, 2, 0, 1, 2, 2, 0, 0, 0, 1, 2, 2, 0, 2, 2, 0, 2, 2, 2, 0, 0, 0, 2, 0, 1, 0, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2]
## Comparing quantum with classical kmeans algorithm
[[14996  1586]
 [ 1652  4116]]


###### TEST 14 on iris dataset
## QKMEANS
# Parameters: K = 4, M = 150, N = 4, M1 = 16, shots = 20000
# Iterations needed: 10/10
# Average iteration time: 48.57s 
# Average accuracy w.r.t classical assignment: 70.8% 
# SSE: 43.30842758945314
# Silhouette: 0.2745983082175641
# Quantum kmeans assignment 
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 3, 3, 3, 3, 0, 2, 0, 1, 2, 1, 0, 1, 0, 1, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 0, 0, 1, 1, 2, 2, 0, 2, 2, 1, 1, 1, 1, 2, 1, 0, 0, 2, 1, 1, 1, 2, 1, 1, 1, 1, 0, 1, 3, 1, 2, 0, 0, 1, 0, 2, 1, 2, 0, 0, 2, 0, 0, 1, 0, 0, 2, 2, 0, 1, 2, 2, 2, 0, 2, 0, 0, 0, 2, 2, 0, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 1, 2, 2, 1, 0, 0, 2]
## Classical KMEANS
# Iterations needed: 5/10
# Average iteration time: 0.0004448890686035156s 
# SSE: 25.896986331004793
# Silhouette: 0.4462966164475495
# Classical Kmeans assignment
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 1, 0, 1, 2, 1, 0, 1, 1, 2, 1, 0, 1, 0, 2, 1, 1, 1, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 2, 2, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 2, 2, 0, 2, 2, 0, 1, 0, 0, 2, 2, 2, 0, 1, 2, 2, 0, 0, 0, 1, 2, 2, 0, 2, 2, 0, 2, 2, 2, 0, 0, 0, 2, 0, 1, 0, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2]
## Comparing quantum with classical kmeans algorithm
[[14886  1760]
 [ 1762  3942]]


###### TEST 15 on iris dataset
## QKMEANS
# Parameters: K = 4, M = 150, N = 4, M1 = 32, shots = 36000
# Iterations needed: 10/10
# Average iteration time: 56.54s 
# Average accuracy w.r.t classical assignment: 70.8% 
# SSE: 39.064358571670425
# Silhouette: 0.28637244878084467
# Quantum kmeans assignment 
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 0, 0, 1, 2, 0, 2, 1, 2, 1, 1, 2, 1, 0, 1, 2, 2, 2, 1, 1, 2, 1, 0, 1, 2, 0, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 0, 2, 2, 2, 1, 2, 1, 2, 0, 2, 0, 1, 0, 0, 2, 2, 0, 1, 0, 2, 0, 1, 0, 2, 0, 2, 2, 2, 0, 2, 1, 2, 2, 2, 2, 2, 0, 2, 0, 0, 1, 0, 2, 2, 0, 2, 0, 2]
## Classical KMEANS
# Iterations needed: 5/10
# Average iteration time: 0.00043659210205078126s 
# SSE: 25.896986331004793
# Silhouette: 0.4462966164475495
# Classical Kmeans assignment
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 1, 0, 1, 2, 1, 0, 1, 1, 2, 1, 0, 1, 0, 2, 1, 1, 1, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 2, 2, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 2, 2, 0, 2, 2, 0, 1, 0, 0, 2, 2, 2, 0, 1, 2, 2, 0, 0, 0, 1, 2, 2, 0, 2, 2, 0, 2, 2, 2, 0, 0, 0, 2, 0, 1, 0, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2]
## Comparing quantum with classical kmeans algorithm
[[14940  1618]
 [ 1708  4084]]


###### TEST 16 on iris dataset
## QKMEANS
# Parameters: K = 4, M = 150, N = 4, M1 = 64, shots = 68000
# Iterations needed: 10/10
# Average iteration time: 67.52s 
# Average accuracy w.r.t classical assignment: 68.53% 
# SSE: 46.08009926410293
# Silhouette: 0.2649459279361136
# Quantum kmeans assignment 
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 0, 1, 0, 2, 0, 1, 0, 1, 1, 2, 1, 0, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 3, 1, 1, 1, 2, 2, 0, 1, 1, 1, 1, 2, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 2, 2, 2, 1, 0, 1, 0, 0, 1, 2, 0, 0, 0, 1, 0, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 0, 0, 0, 2, 2, 1, 1, 0, 2, 2, 0, 2, 0, 0, 0, 2, 2, 2, 0, 0, 2, 0]
## Classical KMEANS
# Iterations needed: 5/10
# Average iteration time: 0.00046863555908203123s 
# SSE: 25.896986331004793
# Silhouette: 0.4462966164475495
# Classical Kmeans assignment
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 1, 0, 1, 2, 1, 0, 1, 1, 2, 1, 0, 1, 0, 2, 1, 1, 1, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 2, 2, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 2, 2, 0, 2, 2, 0, 1, 0, 0, 2, 2, 2, 0, 1, 2, 2, 0, 0, 0, 1, 2, 2, 0, 2, 2, 0, 2, 2, 2, 0, 0, 0, 2, 0, 1, 0, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2]
## Comparing quantum with classical kmeans algorithm
[[14706  1846]
 [ 1942  3856]]


###### TEST 17 on iris dataset
## QKMEANS
# Parameters: K = 4, M = 150, N = 4, M1 = 128, shots = 132000
# Iterations needed: 10/10
# Average iteration time: 83.28s 
# Average accuracy w.r.t classical assignment: 69.8% 
# SSE: 42.77188513419651
# Silhouette: 0.27530098577412665
# Quantum kmeans assignment 
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 0, 2, 1, 0, 2, 0, 3, 2, 1, 1, 0, 1, 0, 1, 2, 0, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 0, 1, 1, 1, 2, 1, 1, 1, 1, 1, 0, 1, 0, 2, 2, 0, 1, 1, 0, 1, 2, 0, 2, 0, 2, 0, 1, 1, 0, 2, 2, 1, 2, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 1, 0, 0, 0, 0, 0, 2, 2, 1, 2, 0, 2, 1, 0, 2, 0]
## Classical KMEANS
# Iterations needed: 5/10
# Average iteration time: 0.00042891502380371094s 
# SSE: 25.896986331004793
# Silhouette: 0.4462966164475495
# Classical Kmeans assignment
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 1, 0, 1, 2, 1, 0, 1, 1, 2, 1, 0, 1, 0, 2, 1, 1, 1, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 2, 2, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 2, 2, 0, 2, 2, 0, 1, 0, 0, 2, 2, 2, 0, 1, 2, 2, 0, 0, 0, 1, 2, 2, 0, 2, 2, 0, 2, 2, 2, 0, 0, 0, 2, 0, 1, 0, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2]
## Comparing quantum with classical kmeans algorithm
[[14960  1610]
 [ 1688  4092]]


###### TEST 18 on iris dataset
## QKMEANS
# Parameters: K = 5, M = 150, N = 4, M1 = 2, shots = 7000
# Iterations needed: 10/10
# Average iteration time: 88.29s 
# Average accuracy w.r.t classical assignment: 68.53% 
# SSE: 38.60825047487194
# Silhouette: 0.2734182654628253
# Quantum kmeans assignment 
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 1, 2, 1, 4, 0, 4, 1, 4, 2, 4, 4, 2, 4, 0, 4, 2, 0, 4, 4, 4, 0, 4, 1, 0, 4, 1, 4, 2, 2, 4, 4, 4, 4, 2, 4, 1, 1, 4, 4, 4, 4, 2, 4, 4, 4, 4, 4, 4, 4, 4, 2, 4, 2, 0, 0, 1, 4, 0, 1, 0, 2, 0, 0, 2, 4, 2, 1, 2, 2, 0, 0, 2, 2, 4, 1, 2, 1, 0, 2, 1, 1, 1, 0, 2, 0, 2, 0, 4, 1, 0, 1, 2, 4, 0, 0, 1, 1, 1, 1, 0]
## Classical KMEANS
# Iterations needed: 6/10
# Average iteration time: 0.0004543463389078776s 
# SSE: 20.559724962775743
# Silhouette: 0.44886840702610187
# Classical Kmeans assignment
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 4, 1, 4, 2, 4, 0, 4, 4, 2, 4, 1, 4, 0, 2, 4, 1, 4, 2, 1, 1, 1, 0, 0, 0, 0, 1, 4, 4, 4, 4, 1, 4, 2, 0, 1, 4, 4, 4, 2, 4, 4, 4, 4, 4, 1, 4, 4, 2, 1, 0, 2, 2, 0, 4, 0, 1, 2, 2, 1, 2, 1, 2, 2, 2, 0, 0, 1, 2, 1, 0, 1, 2, 0, 1, 2, 2, 0, 0, 0, 2, 1, 1, 0, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2]
## Comparing quantum with classical kmeans algorithm
[[16040  1324]
 [ 1434  3552]]


###### TEST 19 on iris dataset
## QKMEANS
# Parameters: K = 5, M = 150, N = 4, M1 = 4, shots = 9000
# Iterations needed: 10/10
# Average iteration time: 61.71s 
# Average accuracy w.r.t classical assignment: 65.47% 
# SSE: 37.38331761729858
# Silhouette: 0.2785881861537514
# Quantum kmeans assignment 
[3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 0, 1, 0, 4, 1, 4, 0, 4, 2, 4, 4, 1, 4, 2, 4, 1, 0, 4, 2, 4, 0, 4, 4, 1, 0, 0, 1, 1, 4, 4, 4, 4, 4, 4, 0, 0, 1, 4, 4, 4, 4, 1, 4, 4, 4, 2, 4, 0, 4, 4, 0, 1, 0, 2, 0, 2, 4, 1, 1, 2, 2, 0, 2, 4, 2, 2, 0, 1, 0, 4, 0, 0, 2, 2, 1, 1, 1, 2, 1, 1, 2, 0, 0, 0, 1, 2, 0, 2, 4, 1, 2, 2, 4, 1, 0, 2, 2, 2, 0, 2]
## Classical KMEANS
# Iterations needed: 6/10
# Average iteration time: 0.00034578641255696613s 
# SSE: 20.559724962775743
# Silhouette: 0.44886840702610187
# Classical Kmeans assignment
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 4, 1, 4, 2, 4, 0, 4, 4, 2, 4, 1, 4, 0, 2, 4, 1, 4, 2, 1, 1, 1, 0, 0, 0, 0, 1, 4, 4, 4, 4, 1, 4, 2, 0, 1, 4, 4, 4, 2, 4, 4, 4, 4, 4, 1, 4, 4, 2, 1, 0, 2, 2, 0, 4, 0, 1, 2, 2, 1, 2, 1, 2, 2, 2, 0, 0, 1, 2, 1, 0, 1, 2, 0, 1, 2, 2, 0, 0, 0, 2, 1, 1, 0, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2]
## Comparing quantum with classical kmeans algorithm
[[15988  1506]
 [ 1486  3370]]


###### TEST 20 on iris dataset
## QKMEANS
# Parameters: K = 5, M = 150, N = 4, M1 = 8, shots = 13000
# Iterations needed: 10/10
# Average iteration time: 51.91s 
# Average accuracy w.r.t classical assignment: 68.33% 
# SSE: 44.645876038004765
# Silhouette: 0.22466838924383004
# Quantum kmeans assignment 
[3, 4, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 0, 0, 4, 1, 4, 1, 4, 4, 1, 4, 1, 4, 0, 0, 4, 4, 4, 0, 4, 1, 4, 1, 2, 4, 1, 4, 4, 4, 3, 4, 4, 2, 2, 0, 1, 4, 4, 4, 1, 4, 4, 4, 0, 4, 0, 4, 4, 1, 0, 2, 2, 0, 0, 4, 0, 1, 1, 2, 2, 0, 0, 2, 0, 1, 0, 1, 4, 1, 0, 2, 1, 0, 2, 0, 0, 2, 1, 0, 0, 1, 2, 0, 2, 2, 0, 0, 1, 1, 2, 4, 2, 2, 0, 1, 0, 2, 1]
## Classical KMEANS
# Iterations needed: 6/10
# Average iteration time: 0.0003549655278523763s 
# SSE: 20.559724962775743
# Silhouette: 0.44886840702610187
# Classical Kmeans assignment
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 4, 1, 4, 2, 4, 0, 4, 4, 2, 4, 1, 4, 0, 2, 4, 1, 4, 2, 1, 1, 1, 0, 0, 0, 0, 1, 4, 4, 4, 4, 1, 4, 2, 0, 1, 4, 4, 4, 2, 4, 4, 4, 4, 4, 1, 4, 4, 2, 1, 0, 2, 2, 0, 4, 0, 1, 2, 2, 1, 2, 1, 2, 2, 2, 0, 0, 1, 2, 1, 0, 1, 2, 0, 1, 2, 2, 0, 0, 0, 2, 1, 1, 0, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2]
## Comparing quantum with classical kmeans algorithm
[[15756  1792]
 [ 1718  3084]]


###### TEST 21 on iris dataset
## QKMEANS
# Parameters: K = 5, M = 150, N = 4, M1 = 16, shots = 21000
# Iterations needed: 10/10
# Average iteration time: 52.97s 
# Average accuracy w.r.t classical assignment: 63.2% 
# SSE: 50.17269112149797
# Silhouette: 0.23230359349126056
# Quantum kmeans assignment 
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 0, 2, 2, 4, 0, 4, 0, 4, 4, 1, 4, 4, 4, 0, 4, 4, 4, 4, 1, 4, 2, 4, 4, 2, 1, 1, 4, 4, 4, 4, 2, 4, 4, 2, 1, 4, 4, 4, 4, 0, 4, 0, 4, 2, 4, 2, 4, 4, 1, 4, 1, 2, 2, 1, 2, 2, 4, 1, 2, 4, 1, 4, 4, 0, 0, 2, 2, 4, 1, 0, 0, 0, 2, 2, 4, 2, 0, 1, 1, 0, 1, 4, 4, 1, 2, 2, 4, 0, 0, 1, 4, 1, 1, 1, 4, 4, 1, 0]
## Classical KMEANS
# Iterations needed: 6/10
# Average iteration time: 0.0003641049067179362s 
# SSE: 20.559724962775743
# Silhouette: 0.44886840702610187
# Classical Kmeans assignment
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 4, 1, 4, 2, 4, 0, 4, 4, 2, 4, 1, 4, 0, 2, 4, 1, 4, 2, 1, 1, 1, 0, 0, 0, 0, 1, 4, 4, 4, 4, 1, 4, 2, 0, 1, 4, 4, 4, 2, 4, 4, 4, 4, 4, 1, 4, 4, 2, 1, 0, 2, 2, 0, 4, 0, 1, 2, 2, 1, 2, 1, 2, 2, 2, 0, 0, 1, 2, 1, 0, 1, 2, 0, 1, 2, 2, 0, 0, 0, 2, 1, 1, 0, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2]
## Comparing quantum with classical kmeans algorithm
[[15554  1616]
 [ 1920  3260]]


###### TEST 22 on iris dataset
## QKMEANS
# Parameters: K = 5, M = 150, N = 4, M1 = 32, shots = 37000
# Iterations needed: 10/10
# Average iteration time: 60.46s 
# Average accuracy w.r.t classical assignment: 64.73% 
# SSE: 49.25500410450126
# Silhouette: 0.23660538026188396
# Quantum kmeans assignment 
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 0, 1, 4, 0, 2, 0, 4, 1, 4, 4, 0, 0, 4, 4, 0, 0, 4, 4, 4, 1, 4, 4, 0, 1, 1, 1, 2, 4, 4, 1, 4, 4, 4, 0, 1, 2, 4, 4, 4, 1, 4, 4, 4, 4, 2, 4, 1, 4, 4, 0, 4, 1, 1, 0, 0, 4, 2, 2, 0, 1, 1, 0, 4, 4, 1, 0, 2, 2, 0, 1, 2, 4, 4, 2, 1, 0, 1, 4, 2, 0, 1, 1, 2, 4, 1, 1, 0, 2, 2, 2, 2, 4, 2, 0, 0, 2, 0, 1, 4]
## Classical KMEANS
# Iterations needed: 6/10
# Average iteration time: 0.0003362099329630534s 
# SSE: 20.559724962775743
# Silhouette: 0.44886840702610187
# Classical Kmeans assignment
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 4, 1, 4, 2, 4, 0, 4, 4, 2, 4, 1, 4, 0, 2, 4, 1, 4, 2, 1, 1, 1, 0, 0, 0, 0, 1, 4, 4, 4, 4, 1, 4, 2, 0, 1, 4, 4, 4, 2, 4, 4, 4, 4, 4, 1, 4, 4, 2, 1, 0, 2, 2, 0, 4, 0, 1, 2, 2, 1, 2, 1, 2, 2, 2, 0, 0, 1, 2, 1, 0, 1, 2, 0, 1, 2, 2, 0, 0, 0, 2, 1, 1, 0, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2]
## Comparing quantum with classical kmeans algorithm
[[15632  1724]
 [ 1842  3152]]


###### TEST 23 on iris dataset
## QKMEANS
# Parameters: K = 5, M = 150, N = 4, M1 = 64, shots = 69000
# Iterations needed: 10/10
# Average iteration time: 70.61s 
# Average accuracy w.r.t classical assignment: 61.53% 
# SSE: 63.57098967048122
# Silhouette: 0.12723950649612958
# Quantum kmeans assignment 
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 3, 3, 4, 0, 2, 2, 4, 4, 2, 1, 2, 1, 0, 4, 4, 4, 2, 3, 0, 4, 4, 4, 4, 2, 4, 1, 4, 1, 2, 0, 0, 1, 4, 2, 4, 4, 1, 1, 2, 0, 2, 4, 0, 2, 2, 4, 4, 0, 1, 4, 2, 4, 2, 2, 2, 0, 1, 0, 1, 4, 1, 2, 1, 1, 0, 2, 4, 2, 2, 1, 0, 1, 2, 2, 2, 2, 1, 0, 1, 2, 0, 1, 1, 2, 1, 2, 0, 2, 1, 1, 1, 4, 0, 1, 2, 2, 0, 2, 0, 2, 0, 1, 1]
## Classical KMEANS
# Iterations needed: 6/10
# Average iteration time: 0.0003502368927001953s 
# SSE: 20.559724962775743
# Silhouette: 0.44886840702610187
# Classical Kmeans assignment
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 4, 1, 4, 2, 4, 0, 4, 4, 2, 4, 1, 4, 0, 2, 4, 1, 4, 2, 1, 1, 1, 0, 0, 0, 0, 1, 4, 4, 4, 4, 1, 4, 2, 0, 1, 4, 4, 4, 2, 4, 4, 4, 4, 4, 1, 4, 4, 2, 1, 0, 2, 2, 0, 4, 0, 1, 2, 2, 1, 2, 1, 2, 2, 2, 0, 0, 1, 2, 1, 0, 1, 2, 0, 1, 2, 2, 0, 0, 0, 2, 1, 1, 0, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2]
## Comparing quantum with classical kmeans algorithm
[[15406  2256]
 [ 2068  2620]]


###### TEST 24 on iris dataset
## QKMEANS
# Parameters: K = 5, M = 150, N = 4, M1 = 128, shots = 133000
# Iterations needed: 10/10
# Average iteration time: 96.16s 
# Average accuracy w.r.t classical assignment: 59.33% 
# SSE: 56.86453203049871
# Silhouette: 0.10334398893057997
# Quantum kmeans assignment 
[3, 3, 3, 4, 4, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 4, 3, 4, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 4, 1, 2, 1, 1, 2, 2, 2, 4, 0, 4, 4, 2, 2, 1, 4, 0, 2, 4, 2, 4, 2, 2, 2, 1, 1, 2, 2, 0, 2, 4, 2, 4, 4, 0, 4, 1, 0, 4, 4, 1, 4, 0, 4, 4, 2, 4, 0, 0, 4, 2, 1, 2, 1, 0, 1, 1, 2, 0, 0, 0, 1, 2, 2, 4, 1, 1, 0, 1, 2, 1, 0, 1, 0, 0, 1, 2, 2, 2, 0, 0, 0, 2, 1, 1, 2, 0, 0, 1, 1, 0, 1, 1, 2, 1, 0, 1, 0, 1, 1, 0]
## Classical KMEANS
# Iterations needed: 6/10
# Average iteration time: 0.00037399927775065106s 
# SSE: 20.559724962775743
# Silhouette: 0.44886840702610187
# Classical Kmeans assignment
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 4, 1, 4, 2, 4, 0, 4, 4, 2, 4, 1, 4, 0, 2, 4, 1, 4, 2, 1, 1, 1, 0, 0, 0, 0, 1, 4, 4, 4, 4, 1, 4, 2, 0, 1, 4, 4, 4, 2, 4, 4, 4, 4, 4, 1, 4, 4, 2, 1, 0, 2, 2, 0, 4, 0, 1, 2, 2, 1, 2, 1, 2, 2, 2, 0, 0, 1, 2, 1, 0, 1, 2, 0, 1, 2, 2, 0, 0, 0, 2, 1, 1, 0, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2]
## Comparing quantum with classical kmeans algorithm
[[15512  2376]
 [ 1962  2500]]


###### TEST 25 on iris dataset
## QKMEANS
# Parameters: K = 6, M = 150, N = 4, M1 = 2, shots = 8000
# Iterations needed: 10/10
# Average iteration time: 104.25s 
# Average accuracy w.r.t classical assignment: 56.27% 
# SSE: 34.098891020868344
# Silhouette: 0.06833804946724556
# Quantum kmeans assignment 
[3, 5, 5, 5, 3, 5, 3, 3, 5, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 5, 5, 5, 5, 5, 5, 5, 3, 5, 3, 3, 3, 3, 5, 3, 5, 3, 5, 5, 3, 4, 5, 3, 3, 5, 3, 5, 5, 3, 1, 1, 2, 4, 0, 4, 1, 4, 1, 4, 4, 1, 4, 0, 4, 2, 4, 4, 4, 4, 0, 4, 0, 2, 2, 2, 2, 1, 1, 4, 4, 4, 4, 2, 4, 1, 0, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 2, 1, 1, 2, 2, 2, 4, 1, 4, 1, 1, 2, 1, 4, 2, 2, 1, 2, 2, 4, 1, 0, 2, 4, 0, 1, 1, 2, 2, 2, 2, 0, 0, 4, 4, 1, 0, 2, 0, 2, 2, 0, 1, 1, 2, 1, 1, 2, 0, 1]
## Classical KMEANS
# Iterations needed: 10/10
# Average iteration time: 0.00028500556945800783s 
# SSE: 16.67117066050213
# Silhouette: 0.3847438594953036
# Classical Kmeans assignment
[5, 3, 3, 3, 5, 5, 3, 5, 3, 3, 5, 5, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 5, 5, 5, 3, 3, 5, 5, 5, 3, 3, 5, 5, 3, 5, 5, 3, 3, 5, 5, 3, 5, 3, 5, 3, 0, 2, 0, 4, 0, 4, 2, 4, 0, 4, 4, 1, 4, 1, 4, 0, 1, 4, 1, 4, 2, 1, 1, 1, 0, 0, 0, 0, 1, 4, 4, 4, 4, 1, 4, 2, 0, 1, 4, 4, 4, 0, 4, 4, 4, 4, 4, 0, 4, 4, 2, 1, 0, 1, 2, 0, 4, 0, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 0, 1, 2, 1, 0, 1, 2, 0, 1, 2, 1, 0, 0, 2, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2]
## Comparing quantum with classical kmeans algorithm
[[16490  1908]
 [ 2162  1790]]


###### TEST 26 on iris dataset
## QKMEANS
# Parameters: K = 6, M = 150, N = 4, M1 = 4, shots = 10000
# Iterations needed: 10/10
# Average iteration time: 68.71s 
# Average accuracy w.r.t classical assignment: 58.2% 
# SSE: 33.810562615994456
# Silhouette: 0.07591030289344915
# Quantum kmeans assignment 
[5, 5, 3, 3, 3, 5, 5, 3, 3, 5, 5, 5, 5, 3, 5, 5, 3, 3, 5, 3, 5, 5, 3, 5, 3, 5, 3, 3, 3, 3, 3, 3, 5, 5, 3, 5, 3, 5, 3, 5, 5, 4, 3, 3, 5, 3, 5, 5, 3, 3, 0, 2, 1, 4, 4, 4, 1, 4, 1, 4, 4, 2, 4, 4, 4, 0, 1, 4, 4, 4, 2, 4, 2, 4, 1, 2, 0, 2, 1, 4, 4, 4, 4, 1, 4, 0, 1, 4, 4, 4, 4, 1, 4, 4, 4, 4, 4, 2, 4, 4, 2, 4, 1, 0, 1, 2, 4, 1, 1, 2, 2, 4, 1, 4, 1, 2, 0, 2, 2, 4, 2, 2, 2, 0, 0, 1, 2, 2, 1, 2, 0, 1, 1, 1, 4, 1, 2, 0, 2, 1, 1, 1, 0, 2, 2, 0, 0, 0, 1, 0]
## Classical KMEANS
# Iterations needed: 10/10
# Average iteration time: 0.0003299236297607422s 
# SSE: 16.67117066050213
# Silhouette: 0.3847438594953036
# Classical Kmeans assignment
[5, 3, 3, 3, 5, 5, 3, 5, 3, 3, 5, 5, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 5, 5, 5, 3, 3, 5, 5, 5, 3, 3, 5, 5, 3, 5, 5, 3, 3, 5, 5, 3, 5, 3, 5, 3, 0, 2, 0, 4, 0, 4, 2, 4, 0, 4, 4, 1, 4, 1, 4, 0, 1, 4, 1, 4, 2, 1, 1, 1, 0, 0, 0, 0, 1, 4, 4, 4, 4, 1, 4, 2, 0, 1, 4, 4, 4, 0, 4, 4, 4, 4, 4, 0, 4, 4, 2, 1, 0, 1, 2, 0, 4, 0, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 0, 1, 2, 1, 0, 1, 2, 0, 1, 2, 1, 0, 0, 2, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2]
## Comparing quantum with classical kmeans algorithm
[[16562  1942]
 [ 2090  1756]]


###### TEST 27 on iris dataset
## QKMEANS
# Parameters: K = 6, M = 150, N = 4, M1 = 8, shots = 14000
# Iterations needed: 10/10
# Average iteration time: 55.66s 
# Average accuracy w.r.t classical assignment: 52.8% 
# SSE: 44.513439421778266
# Silhouette: -0.0023977234317074858
# Quantum kmeans assignment 
[3, 3, 5, 5, 5, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 3, 3, 3, 5, 3, 3, 3, 5, 5, 5, 5, 5, 5, 3, 3, 5, 3, 3, 5, 3, 3, 5, 5, 3, 5, 3, 5, 3, 3, 3, 5, 3, 5, 5, 3, 0, 2, 1, 4, 2, 2, 1, 5, 1, 4, 4, 0, 4, 4, 4, 0, 4, 4, 4, 4, 2, 4, 4, 1, 0, 0, 4, 1, 2, 4, 4, 4, 4, 4, 4, 2, 0, 4, 4, 4, 4, 2, 4, 4, 0, 4, 0, 2, 4, 2, 1, 2, 0, 1, 1, 2, 4, 0, 0, 2, 2, 1, 1, 4, 1, 1, 0, 0, 2, 4, 2, 2, 1, 4, 4, 2, 2, 1, 2, 0, 2, 2, 0, 4, 2, 0, 0, 1, 2, 1, 1, 2, 4, 2, 2, 4, 4, 2, 1, 4]
## Classical KMEANS
# Iterations needed: 10/10
# Average iteration time: 0.00034008026123046877s 
# SSE: 16.67117066050213
# Silhouette: 0.3847438594953036
# Classical Kmeans assignment
[5, 3, 3, 3, 5, 5, 3, 5, 3, 3, 5, 5, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 5, 5, 5, 3, 3, 5, 5, 5, 3, 3, 5, 5, 3, 5, 5, 3, 3, 5, 5, 3, 5, 3, 5, 3, 0, 2, 0, 4, 0, 4, 2, 4, 0, 4, 4, 1, 4, 1, 4, 0, 1, 4, 1, 4, 2, 1, 1, 1, 0, 0, 0, 0, 1, 4, 4, 4, 4, 1, 4, 2, 0, 1, 4, 4, 4, 0, 4, 4, 4, 4, 4, 0, 4, 4, 2, 1, 0, 1, 2, 0, 4, 0, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 0, 1, 2, 1, 0, 1, 2, 0, 1, 2, 1, 0, 0, 2, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2]
## Comparing quantum with classical kmeans algorithm
[[16350  2138]
 [ 2302  1560]]


###### TEST 28 on iris dataset
## QKMEANS
# Parameters: K = 6, M = 150, N = 4, M1 = 16, shots = 22000
# Iterations needed: 10/10
# Average iteration time: 54.34s 
# Average accuracy w.r.t classical assignment: 49.53% 
# SSE: 48.19998326153792
# Silhouette: -0.006651658862614544
# Quantum kmeans assignment 
[5, 3, 5, 5, 3, 5, 3, 5, 5, 5, 5, 5, 5, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 3, 5, 3, 5, 3, 3, 3, 3, 3, 3, 5, 5, 3, 3, 3, 5, 5, 4, 3, 5, 3, 3, 5, 5, 3, 3, 1, 0, 2, 0, 0, 4, 1, 4, 1, 4, 4, 4, 4, 4, 5, 2, 1, 4, 4, 4, 1, 0, 0, 4, 2, 0, 4, 2, 1, 4, 4, 4, 4, 1, 4, 0, 2, 4, 4, 4, 4, 1, 2, 4, 4, 1, 2, 1, 4, 4, 1, 1, 1, 1, 2, 1, 1, 0, 1, 2, 2, 4, 0, 4, 0, 1, 1, 1, 4, 4, 2, 2, 1, 2, 0, 0, 4, 1, 0, 2, 1, 1, 1, 1, 4, 2, 1, 1, 4, 0, 4, 2, 1, 2, 0, 2, 2, 2, 1, 2]
## Classical KMEANS
# Iterations needed: 10/10
# Average iteration time: 0.0002451419830322266s 
# SSE: 16.67117066050213
# Silhouette: 0.3847438594953036
# Classical Kmeans assignment
[5, 3, 3, 3, 5, 5, 3, 5, 3, 3, 5, 5, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 5, 5, 5, 3, 3, 5, 5, 5, 3, 3, 5, 5, 3, 5, 5, 3, 3, 5, 5, 3, 5, 3, 5, 3, 0, 2, 0, 4, 0, 4, 2, 4, 0, 4, 4, 1, 4, 1, 4, 0, 1, 4, 1, 4, 2, 1, 1, 1, 0, 0, 0, 0, 1, 4, 4, 4, 4, 1, 4, 2, 0, 1, 4, 4, 4, 0, 4, 4, 4, 4, 4, 0, 4, 4, 2, 1, 0, 1, 2, 0, 4, 0, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 0, 1, 2, 1, 0, 1, 2, 0, 1, 2, 1, 0, 0, 2, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2]
## Comparing quantum with classical kmeans algorithm
[[16270  2240]
 [ 2382  1458]]


###### TEST 29 on iris dataset
## QKMEANS
# Parameters: K = 6, M = 150, N = 4, M1 = 32, shots = 38000
# Iterations needed: 10/10
# Average iteration time: 62.04s 
# Average accuracy w.r.t classical assignment: 50.13% 
# SSE: 57.495774622950606
# Silhouette: -0.02904484817786539
# Quantum kmeans assignment 
[5, 3, 5, 3, 3, 5, 3, 3, 5, 3, 3, 5, 3, 3, 3, 3, 3, 5, 3, 3, 3, 5, 3, 3, 3, 3, 5, 3, 5, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 3, 3, 4, 3, 3, 3, 5, 3, 3, 3, 5, 4, 2, 2, 4, 2, 1, 0, 3, 1, 4, 5, 4, 4, 2, 4, 2, 2, 2, 2, 1, 1, 2, 2, 1, 0, 1, 1, 0, 4, 4, 2, 5, 4, 0, 2, 0, 1, 1, 1, 4, 4, 2, 4, 4, 0, 4, 4, 0, 4, 4, 2, 2, 2, 0, 0, 1, 0, 2, 4, 2, 1, 4, 1, 1, 4, 1, 1, 1, 2, 4, 2, 4, 1, 1, 0, 2, 4, 1, 4, 4, 2, 2, 0, 2, 4, 1, 2, 0, 1, 2, 2, 2, 4, 2, 2, 2, 2, 2, 1, 0]
## Classical KMEANS
# Iterations needed: 10/10
# Average iteration time: 0.0002565145492553711s 
# SSE: 16.67117066050213
# Silhouette: 0.3847438594953036
# Classical Kmeans assignment
[5, 3, 3, 3, 5, 5, 3, 5, 3, 3, 5, 5, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 5, 5, 5, 3, 3, 5, 5, 5, 3, 3, 5, 5, 3, 5, 5, 3, 3, 5, 5, 3, 5, 3, 5, 3, 0, 2, 0, 4, 0, 4, 2, 4, 0, 4, 4, 1, 4, 1, 4, 0, 1, 4, 1, 4, 2, 1, 1, 1, 0, 0, 0, 0, 1, 4, 4, 4, 4, 1, 4, 2, 0, 1, 4, 4, 4, 0, 4, 4, 4, 4, 4, 0, 4, 4, 2, 1, 0, 1, 2, 0, 4, 0, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 0, 1, 2, 1, 0, 1, 2, 0, 1, 2, 1, 0, 0, 2, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2]
## Comparing quantum with classical kmeans algorithm
[[16184  2294]
 [ 2468  1404]]


###### TEST 30 on iris dataset
## QKMEANS
# Parameters: K = 6, M = 150, N = 4, M1 = 64, shots = 70000
# Iterations needed: 10/10
# Average iteration time: 71.68s 
# Average accuracy w.r.t classical assignment: 48.47% 
# SSE: 45.20346797087162
# Silhouette: 0.019729506931304323
# Quantum kmeans assignment 
[3, 3, 3, 5, 5, 5, 3, 3, 3, 3, 5, 3, 5, 5, 5, 3, 5, 3, 3, 5, 3, 5, 3, 5, 5, 3, 3, 3, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 5, 3, 3, 5, 3, 3, 3, 5, 3, 3, 5, 3, 0, 1, 2, 4, 4, 2, 0, 4, 4, 4, 4, 2, 4, 1, 4, 2, 1, 0, 4, 4, 0, 0, 4, 4, 2, 1, 0, 2, 4, 2, 4, 4, 4, 4, 2, 0, 1, 4, 4, 4, 4, 2, 4, 3, 4, 4, 0, 2, 5, 4, 0, 1, 0, 0, 0, 2, 4, 0, 0, 0, 1, 2, 2, 0, 1, 2, 0, 2, 2, 4, 0, 2, 2, 2, 2, 1, 2, 2, 4, 2, 1, 1, 0, 1, 2, 1, 2, 2, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 1, 2]
## Classical KMEANS
# Iterations needed: 10/10
# Average iteration time: 0.00024263858795166017s 
# SSE: 16.67117066050213
# Silhouette: 0.3847438594953036
# Classical Kmeans assignment
[5, 3, 3, 3, 5, 5, 3, 5, 3, 3, 5, 5, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 5, 5, 5, 3, 3, 5, 5, 5, 3, 3, 5, 5, 3, 5, 5, 3, 3, 5, 5, 3, 5, 3, 5, 3, 0, 2, 0, 4, 0, 4, 2, 4, 0, 4, 4, 1, 4, 1, 4, 0, 1, 4, 1, 4, 2, 1, 1, 1, 0, 0, 0, 0, 1, 4, 4, 4, 4, 1, 4, 2, 0, 1, 4, 4, 4, 0, 4, 4, 4, 4, 4, 0, 4, 4, 2, 1, 0, 1, 2, 0, 4, 0, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 0, 1, 2, 1, 0, 1, 2, 0, 1, 2, 1, 0, 0, 2, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2]
## Comparing quantum with classical kmeans algorithm
[[16378  2236]
 [ 2274  1462]]


###### TEST 31 on iris dataset
## QKMEANS
# Parameters: K = 6, M = 150, N = 4, M1 = 128, shots = 134000
# Iterations needed: 10/10
# Average iteration time: 96.85s 
# Average accuracy w.r.t classical assignment: 49.93% 
# SSE: 43.54134091840894
# Silhouette: 0.0249730404167372
# Quantum kmeans assignment 
[5, 3, 5, 5, 3, 3, 5, 5, 3, 5, 3, 3, 5, 5, 5, 5, 3, 3, 5, 5, 3, 3, 3, 5, 3, 5, 3, 3, 3, 5, 5, 5, 5, 3, 5, 5, 5, 3, 5, 5, 5, 3, 5, 5, 5, 3, 5, 5, 5, 5, 2, 1, 2, 4, 2, 4, 1, 3, 1, 4, 3, 1, 4, 4, 4, 2, 4, 4, 4, 4, 2, 2, 4, 2, 2, 1, 1, 2, 4, 4, 4, 4, 4, 2, 4, 0, 1, 4, 0, 4, 4, 2, 4, 4, 4, 2, 2, 0, 4, 4, 1, 0, 0, 2, 1, 2, 4, 2, 4, 0, 0, 1, 4, 4, 4, 0, 2, 1, 1, 0, 1, 1, 1, 2, 4, 1, 2, 2, 2, 1, 2, 2, 0, 0, 4, 0, 1, 1, 2, 2, 2, 1, 4, 1, 1, 2, 0, 0, 1, 0]
## Classical KMEANS
# Iterations needed: 10/10
# Average iteration time: 0.00030126571655273435s 
# SSE: 16.67117066050213
# Silhouette: 0.3847438594953036
# Classical Kmeans assignment
[5, 3, 3, 3, 5, 5, 3, 5, 3, 3, 5, 5, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 5, 5, 5, 3, 3, 5, 5, 5, 3, 3, 5, 5, 3, 5, 5, 3, 3, 5, 5, 3, 5, 3, 5, 3, 0, 2, 0, 4, 0, 4, 2, 4, 0, 4, 4, 1, 4, 1, 4, 0, 1, 4, 1, 4, 2, 1, 1, 1, 0, 0, 0, 0, 1, 4, 4, 4, 4, 1, 4, 2, 0, 1, 4, 4, 4, 0, 4, 4, 4, 4, 4, 0, 4, 4, 2, 1, 0, 1, 2, 0, 4, 0, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 0, 1, 2, 1, 0, 1, 2, 0, 1, 2, 1, 0, 0, 2, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2]
## Comparing quantum with classical kmeans algorithm
[[16434  2092]
 [ 2218  1606]]


